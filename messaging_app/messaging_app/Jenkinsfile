pipeline {
    agent any
    
    options {
        timeout(time: 30, unit: 'MINUTES')
    }
    
    environment {
        VENV = "${WORKSPACE}/venv"
        APP_DIR = "${WORKSPACE}/messaging_app"
    }
    
    stages {
        stage('Checkout') {
            steps {
                script {
                    // Clean workspace before checkout
                    deleteDir()
                    
                    // Shallow clone with depth 1 to speed up
                    checkout([$class: 'GitSCM',
                        branches: [[name: '*/master']],
                        extensions: [
                            [$class: 'CloneOption', depth: 1, noTags: true, shallow: true],
                            [$class: 'TimeoutOption', timeout: 15]
                        ],
                        userRemoteConfigs: [[
                            url: 'https://github.com/steve9948/alx-backend-python.git',
                            credentialsId: '4101d079-d1d5-4971-9899-b45ea582c62e'
                        ]]
                    ])
                }
            }
        }
        
        stage('Setup Python') {
            steps {
                sh '''
                    python3 -m venv ${VENV}
                    . ${VENV}/bin/activate
                    cd ${APP_DIR}
                    pip install pytest pytest-html
                '''
            }
        }
        
        stage('Run Tests') {
            steps {
                sh '''
                    . ${VENV}/bin/activate
                    cd ${APP_DIR}
                    mkdir -p test-reports
                    pytest --html=test-reports/report.html --self-contained-html
                '''
            }
            post {
                always {
                    publishHTML([
                        allowMissing: false,
                        alwaysLinkToLastBuild: true,
                        keepAll: true,
                        reportDir: "${APP_DIR}/test-reports",
                        reportFiles: 'report.html',
                        reportName: 'Test Report'
                    ])
                }
            }
        }
    }
    
    post {
        always {
            cleanWs()
        }
    }
}